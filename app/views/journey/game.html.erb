<div class="container game-play">
  <script type="text/javascript" id="game-play1">

  function setup(){
    height = 1000;
    width = 600;
    cnv = createCanvas(height , width);
  }


  s = 0;
  t = 0;
  player = new Player(200,10,10,25,10,10,10,10,150,"magic");
  enemy1 = new EnemyRanged(5,100,10,25,10,10,10,1,0,"melee");
  enemy2 = new EnemyRanged(5,50,50,25,10,10,10,1,0,"melee");
  enemy3 = new EnemyMelee(5,150,10,25,10,10,10,3,0,"melee");
  enemy4 = new EnemyMelee(5,55,70,25,10,10,10,3,0,"melee");
  rock1 = new Obstacle(5,200,400,70,10,10,10,3,0,"melee")
  rock2 = new Obstacle(5,600,600,80,10,10,10,3,0,"melee")
  rock3 = new Obstacle(5,400,80,50,10,10,10,3,0,"melee")

  player_enemies = [player, enemy1, enemy2, enemy3, enemy4];
  enemies = player_enemies.slice(1,player_enemies.length)
  obstacles = [rock1, rock2, rock3]
  arrows = [];
  player_arrows = [];
  player_magic = [];

  var attack;

  var keyPressed = function(){
    if (key === "S" && player.y < 590) {
      player.y += player.spd;
    }

    if (key === "W" && player.y > 10) {
      player.y -= player.spd;
    }

    if (key === "D" && player.x < 1000) {
      player.x += player.spd;
    }

    if (key === "A" && player.x > 10) {
      player.x -= player.spd;
    }
  }

  var draw = function(){
    background(255,255,255);
    player.sketch();

    if (mouseIsPressed){
      if (player.active == "bow" && t > 30)
      {
        player.attack(t);
        t = 0;
      } else if (player.active == "melee" && t > 5){
        player.attack(t);
        for(i = 1; i < player_enemies.length; i++){
          if(player.melee_hit(player_enemies[i], mouseX, mouseY)){
            player_enemies[i].hp -= 1
          }
        }
        t = 0;
      } else if (player.active == "magic" && t > 55){
        player.attack(t);
        t=0;
      }
    }

    for (i = 0; i < obstacles.length; i++){
      obstacles[i].sketch();
    }

    //Moves, draws, attacks and checks for death on all enemies
    for (i = 1 ; i < player_enemies.length; i++){
      player_enemies[i].react(player_enemies.concat(obstacles));
      player_enemies[i].sketch();
      player_enemies[i].attack(player, s, arrows)
      if (player_enemies[i].dead()){
        player_enemies.splice(i,1);
      }
    }

    //Moves and removes arrows fired by enemies
    for(i = 0; i < arrows.length; i++){
      arrows[i].fly();
      arrows[i].sketch();
      if(arrows[i].distance_travelled() > 350){
        arrows.splice(i,1);
      } else if (arrows[i].hit(player)){
        arrows.splice(i,1);
        player.hp -= 5
      }
    }

    //Moves and removes arrows fired by player
    for(i = 0; i < player_arrows.length; i++){
      player_arrows[i].fly();
      player_arrows[i].sketch();
      hit = player_arrows[i].hit_any(player_enemies)
      if(player_arrows[i].distance_travelled() > 350){
        player_arrows.splice(i,1);
      } else if (hit[0]){
        player_arrows.splice(i,1);
        hit[1].hp -= 1;
      }
    }

    for(i = 0; i < player_magic.length; i++){
      player_magic[i].fly();
      player_magic[i].sketch();
      hit = player_magic[i].hit_any(player_enemies.slice(1,player_enemies.length))
      // console.log(point_distance(0,0,1,1))
      if(hit[0]){
        player_magic[i].explode(player_enemies);
        hit[1].hp -= 1;
        player_magic.splice(i,1);
      } else if (player_magic[i].finished_flight()){
        player_magic[i].explode(player_enemies);
        player_magic.splice(i,1);
      }
    }

    text("Player health: " + player.hp,850,20)
    text("Enemy1 health: " + enemy1.hp,850,40)
    text("Enemy2 health: " + enemy2.hp,850,60)
    text("Enemy3 health: " + enemy3.hp,850,80)
    text("Enemy4 health: " + enemy4.hp,850,100)

    if (player.hp <= 0 || player_enemies.length == 1) {
      // $(location).attr('href', '/travel_summary');
      var LocationId = <%= @location_id %>;
      var url = "/travel_summary?location_id=" + LocationId + "&health=" + player.hp;
      window.location.href = url;
      player.hp = 5
      player_enemies.push(1).push(1)
    }

    rect(0,-5,1000,10);
    rect(0,590,1000,10);
    t++;
    s++;
  }

  </script>
</div>
